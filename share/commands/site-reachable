#!/bin/bash

long_usage_message="usage: $(basename $0) site-reachable [<site>] [-q]
Check to see if the given site is accessible via https.

Arguments
  <site> - Optionally, pass the site you want to check. If empty or --all, 
    check all sites.
  -q - Optional indicate that you don't want the summary report at the
    end (e.g. if running via cron job)"

long_check_args "$2" "$#" 0

sites="$2"
quiet="$3"

if [ -n "$quiet" -a "$quiet" != "-q" ]; then
  long_die "I didn't understand the last argument (%s). I was expecting -q." 1 "$noreport"
fi

if [ -z "$sites" -o "$sites" = "--all" ]; then
  long_set_sites
  sites="$LONG_SITES"
fi

timeout=10
total_count=0
online_count=0
offline_count=0
for site in $sites; do
  total_count=$(( $total_count + 1 ))
  # Ensure anonymous access to the page generates a login box.
  if ! curl -s --max-time "$timeout" https://${site}.ourpowerbase.net  | grep "block-user-login" >/dev/null; then
    offline_count=$(( $offline_count + 1 ))
    long_log "Site %s is OFFLINE!!!" error "$site"
  else
    online_count=$(( $online_count + 1 ))
    long_log "Site %s is online" info "$site"
  fi
done

if [ -z "$quiet" ]; then
  printf "\nTotal checked: %s\n" "$total_count"
  printf "Total online: %s\n" "$online_count"
  printf "Total offline: %s\n\n" "$offline_count"
fi

if [ "$offline_count" -gt "0" ]; then
  exit 1
fi
exit 0

