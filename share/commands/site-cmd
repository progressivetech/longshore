#!/bin/bash

long_usage_message="usage: $(basename $0) site-cmd <site> '<cmd>'
Run the specified command, as the www-data user, on the specified site or on
all local sites on this host if <site> is set to --all. This command will not have
any user-interaction but can take arguments as long as the cmd and arguments
are quoted together. Try site-enter instead if you want an interactive shell.

This command cannot be rerun over the network.

Arguments
  <site> - Pass the site if you only want to run the command on that site or --all.
  '<cmd>' - The command and arguments all within quotes."

long_check_args "$2" "$#" 2

if [ -n "$2" -a "$2" != "--all" ]; then
  sites="$2"
else
  long_set_sites $(hostname)
  sites="$LONG_SITES"
fi

cmd="$3"
me=$(hostname)

for site in $sites; do
  if ! long_check_site_exists "$site"; then
    long_log "Site doesn't exist (%s)." error "$site"
    continue
  fi

  # We can't use the re-run over network helper function because the command has to
  # be fully quoted. So, re-implementing here.
  long_set_site_sibling "$site"
  if [ -z "$LONG_SITE_SIBLING" ]; then
    # This could mean the site name was mis-typed.
    long_log "Can't determine where to run this command because site doesn't have sibling (%s)." error "$site"
    continue
  fi
  if [ "$LONG_SITE_SIBLING" = "$me" ]; then
    # Run locally.
    # If the site is not running we can't run a command.
    if ! long_container_running "$site"; then
      long_log "Not executing command for %s because it is not running." info "$site"
      continue
    fi
    long_exec_in_container "$site" "$cmd"
  else
    # Run over the network.
    ssh -t "${LONG_SITE_SIBLING}.mayfirst.org" "/srv/longshore/bin/longshore site-cmd '$site' '$cmd'" 
  fi
done
