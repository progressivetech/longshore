#!/bin/bash

long_usage_message="usage: $(basename $0) site-cron [<site>]
Runs both the drupal and CiviCRM cron job on the specified site or all
sites on this frontend of site is ommitted.

Arguments
  <site> - Optionally pass the site if you only want to run cron on that site."

long_check_args "$2" "$#" 0

# This scripts is designed to be run by a cron job that runs every 10 minutes.

# If the site is specified, run on that site regardless of which sibling it is
# on. However, if the site is not specified, run for all sites on this, and
# only this, sibling (so it can be called by a cron job and not overlap with the
# other siblings).

if [ -n "$2" ]; then
  sites="$2"
else
  hostname=$(hostname)
  long_set_sites "$hostname"
  sites="$LONG_SITES"
fi
for site in $sites; do
  # Temporary hack to stop crons on southernvision
  if [ "$site" = "southernvision" ]; then
    printf "Not running on southervision"
    continue
  fi
  # This command never has more arguments than site-cron and the site. And
  # if we just pass "$@" like we do for the other commands, we will lose
  # the <site> if this command was called without a site argument.
  long_rerun_over_network site-cron "$site" && continue
  # If the site is not running we can't run cron.
  if ! long_container_running "$site"; then
    long_log "Not executing cron for %s because it is not running." info "$site"
    continue
  fi

  long_exec_drush_cmd "$site" "core-cron"
  long_exec_drush_cmd "$site" "-u 1 -r /var/www/powerbase civicrm-api job.execute auth=0 -y"
done
