#!/bin/bash

long_usage_message="usage: $(basename $0) afetch <site>
Copy all data from the local aegir directories. You have to run
the old ptp-dev-import script first. This is a temporary helper
that should be removed once we transfer off of aegir.

Arguments
  <site> - The site to fetch the data for."

long_check_args "$2" "$#" 1

site="$2"

source_base=/var/aegir/platforms/master-ourpowerbase-d7-c4.5/sites/${site}.${LONG_DEFAULT_DOMAIN}
target_base=${LONG_SRV}/services/sites/${site}/drupal

if [ ! -d "$source_base" ]; then
  long_die "Can't find base directory (%s)." 1 "$source_base"
fi

# Build out the directory structure
long_create_site_directories "$site"

# Copy over modules and themes

# We don't want to bring over owner/perms to facilitate setting perms
# properly in the site-create stage.

long_log "Sync'ing code and templates" info

rsync -a --no-owner --no-perms --delete \
  "${source_base}/modules/" "${target_base}/modules/"
rsync -a --no-owner --no-perms --delete \
  "${source_base}/themes/" "${target_base}/themes/"
rsync -a --no-owner --no-perms --delete \
  "${source_base}/custom-civicrm/php/" "${target_base}/custom-civicrm/php/"
rsync -a --no-owner --no-perms --delete \
  "${source_base}/custom-civicrm/templates/" "${target_base}/custom-civicrm/templates/"

# Now get files.

# First we have to chown so we can rsync. After building out the directories,
# these directories will be owned by longshore-php, not longshore.
sudo chown -R longshore "${target_base}/files"
sudo chown -R longshore "${target_base}/private"

# Rsync

# Clear the js, css and template caches
rm -rf "${target_base}"/files/js/*
rm -rf "${target_base}"/files/css/*
rm -rf "${target_base}"/files/civicrm/templates_c/*

long_log "Sync'ing files" info

rsync -a --no-owner --no-perms --delete --exclude 'js/*' \
  --exclude 'css/*' --exclude 'civicrm/templates_c/*' \
  --exclude 'civicrm/ConfigAndLog/*' \
  "${source_base}/files/" "${target_base}/files/"
rsync -a --no-owner --no-perms --delete \
  "${source_base}/private/" "${target_base}/private/"

# Now bring over the database
sql_source_file="/var/aegir/data/${site}.sql"
if [ ! -f "$sql_source_file" ]; then
  long_die "Can't find sql file (%s)." 1 "$sql_source_file"
fi

sql_dest_dir=${LONG_SRV}/services/sites/${site}/backup/
sql_dest_file="${sql_dest_dir}/${site}.sql.gz"

if [ "$sql_source_file" -nt "$sql_dest_file" ]; then
  long_long "Copying sql file." info
  cp "$sql_source_file" "$sql_dest_file"
  cd "$sql_dest_dir" && gzip "${site}.sql"
else
  long_log "Destination sql file is newer than source file, not copying." info
fi
