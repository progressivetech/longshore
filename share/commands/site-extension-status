#!/bin/bash

long_usage_message="usage: $(basename $0) site-extension-status <site> <extension>
Return the status of the given extension, module or theme.

Arguments
  <site> - The site database to run the query or --all for all sites.
  <extension> - The name of the extension, module or theme to check."

long_check_args "$2" "$#" 2

# Generate list of sites to run on if necessary.
if [ "$2" != "--all" ]; then
  sites="$2"
else
  long_set_sites
  sites="$LONG_SITES" 
fi

extension="$3"

enabled=0
disabled=0
notinstalled=0
extension_status=unknown

me=$(hostname)

for site in $sites; do
  long_check_site_exists "$site" || long_die "Site doesn't exist (%s)." 1 "$site"

  long_set_site_sibling "$site"

  query=$(mktemp)
  echo "SELECT is_active FROM civicrm_extension WHERE full_name = '$extension'" > "$temp"
  if [ "$LONG_SITE_SIBLING" = "$me" ]; then
    out=$(long_execute_site_query "$site" "$query" | tail -n1)
  else
    # run over the network
    # Ensure the host is reachable.
    if ! long_is_host_reachable "${LONG_SITE_SIBLING}.mayfirst.org"; then
      long_die "The sibling I was trying to run this command on (%s) is not reachable." \
        1 "${LONG_SITE_SIBLING}.mayfirst.org"
    fi
    # Copy the file to the sibling - use a temp file to avoid clobbering 
    # a file on the other side.
    dest=$(ssh "${LONG_SITE_SIBLING}.mayfirst.org" "mktemp")
    rsync "$query" "${LONG_SITE_SIBLING}.mayfirst.org:$dest"
    out=$(ssh "${LONG_SITE_SIBLING}.mayfirst.org" LONG_LOG_LEVEL="$LONG_LOG_LEVEL" /srv/longshore/bin/longshore site-sqlq "$site" "$dest" | tail -n1)
    if [ "$?" != "0" ]; then
      long_log "Rerunning %s for site %s over network failed." error "site-sqlq" "$site"
    fi
    # Always cleanup on remote serves, since we always create a tmp file.
    ssh "${LONG_SITE_SIBLING}.mayfirst.org" "rm $dest"
  fi
  rm "$query"
  if [ -z "$out"  ]; then
    extension_status="not installed"
    notinstalled=$(( "$notinstalled" + 1 ))
  elif [ "$out" = "1" ]; then
    extension_status="enabled"
    enabled=$(( "$enabled" + 1 ))
  else
    extension_status="disabled"
    disabled=$(( "$disabled" + 1 ))
  fi
  printf "%s: %s\n" "$site" "$extension_status" 
done

printf "\n======\n"
printf "Total Enabled: %s\n" "$enabled"
printf "Total Disabled: %s\n" "$disabled"
printf "Total Not Installed: %s\n" "$notinstalled"
printf "\n======\n"


