#!/bin/bash

long_usage_message="usage: $(basename $0) <type> [<name>]
Create a container. 

Arguments
  <type> - The container type you want to create (site, mysql, nginx) 
  <name> - The name to give the container. Optional for nginx, not for
  site or db."

long_check_args "$2" "$#" 1

ctype="$2"
name="$3"

if [ -z "$name" ]; then
  if [ "$ctype" = "nginx" ]; then
    name=nginx
  else
    long_die "Containers of this type need a name passed as second argument."
  fi
fi

# Make sure the container doesn't already exist. 
if long_container_exists "$name"; then
  long_die "A container with that name exists." "1"
fi

# Sanity checking.
if [ "$ctype" != "mysql" -a "$ctype" != "site" -a "$ctype" != "nginx" ]; then
  long_die "I don't know how to make a container of that type ($ctype)."
fi

# Create a mysql container.
if [ "$ctype" = "mysql" ]; then
  dir="${LONG_SRV}databases/${name}"

  # Use our password generation utility which uses /dev/urandom.
  # long_pwgen will assign a new password to the variable $password.
  password=
  long_pwgen

  # Get the port number. Each MySQL container is assigned a unique port
  # on the host.
  if [ -f "$dir/my.cnf" ]; then
    port=$(grep port "${dir}/my.cnf" | cut -d= -f2)
  else
    # If we don't already have a .my.cnf file, find the next available port.
    last_port=$(grep port= databases/*/my.cnf 2>/dev/null | cut -d= -f2)
    if [ -z "$last_port" ]; then
      port="$LONG_MYSQL_START_PORT"
    else
      port=$(( $last_port + 1 ))
    fi
  fi

  # Make sure our base directory and a mysql sub directory exists.
  # Our my.cnf file will go in ${dir}/my.cnf and be mounted in the host
  # in /mnt/my.cnf and ${dir}/mysql will get mounted at /var/lib/mysql.
  mkdir -p "${dir}/mysql"
  mkdir -p "${dir}/logs"
  long_generate_my_cnf "$dir" "$password" "$port"
  docker create --name "$name" \
    -v "${dir}/mysql":/var/lib/mysql \
    -v "${dir}/my.cnf:/root/.my.cnf" \
    -v "${dir}/logs:/var/log/mysql" \
    -e "LONG_LIVE=$LONG_LIVE" \
    -p "$LONG_IP:${port}:3306" \
    ptp-mysql:latest mysqld

elif [ "$ctype" = "nginx" ]; then
  dir="${LONG_SRV}nginx"
  # Make sure we have our base directories
  mkdir -p "$dir/x509"
  mkdir -p "$dir/sites-enabled"
  mkdir -p "$dir/logs"

  docker create --name "$name" \
    -v "${dir}/x509":/etc/nginx/x509 \
    -v "${dir}/sites-enabled:/etc/nginx/sites-enabled" \
    -v "${dir}/logs:/var/log/nginx" \
    -p "$LONG_IP:80:80" \
    -p "$LONG_IP:443:443" \
    ptp-nginx:latest nginx 

fi

