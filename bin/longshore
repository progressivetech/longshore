#!/bin/bash

# Base program for longshore. A command is required as first argument. 
# If not specified,  use `help` as command.

command="$1"
[ -z "$command" ] && command=help

# Parse global arguments
if [ "$command" = "-f" ] || [ "$command" = "--force" ]; then
  export LONG_FORCE=1
  shift
  command="$1"
fi

# You can pass -x for debugging, which will print each bash command
# prior to executing it.
if [ "$command" = "-x" ]; then
  set -x
  shift
  command="$1"
fi

# Pass -v for more noisy 
if [ "$command" = "-v" ] || [ "$command" = "--verbose" ]; then
  LONG_LOG_LEVEL=info
  shift
  command="$1"
fi

# Try to find a config file
locations="${HOME}/.config/longshore/longshore.conf /etc/longshore/longshore.conf /usr/local/etc/longshore/longshore.conf"

config_file=
for location in $locations; do
  if [ -f "$location" ]; then
     config_file="$location"
    break;
  fi
done

if [ "$config_file" = "" ]; then
  # Last chance...
  location=$(dirname "$0")/../etc/longshore.conf
  if [ -f "$location" ]; then
    config_file="$location"
  fi
fi

if [ ! -f "$config_file" ]; then
  printf "Can't find configuration file.\n"
  exit 1
fi

# Get the config file
source "$config_file"

# Set the LOG LEVEL - take what is passed in via the
# environment as first choice, and default LOG LEVEL
# as second choice (as set in config file)
LONG_LOG_LEVEL=${LONG_LOG_LEVEL:-$LONG_DEFAULT_LOG_LEVEL}

# Get the bash library
source "${LONG_SHARE}"/liblongshore

# Set the LONG_DOCKER_LOG variable based on the LONG_LOG one.
long_set_docker_log_arg

if [ ! -f "${LONG_SHARE}/commands/${command}" ]; then
  printf "That command (%s) doesn't exist.\n" "$command"
  command=help
fi

source "${LONG_SHARE}/commands/${command}"
